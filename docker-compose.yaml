services:
  client-service:
    image: meera7/client-service:latest
    restart: "always"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATASOURCE_URL: ${DATASOURCE_URL}
      DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
    healthcheck:
      test: curl -f http://localhost:8081/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
  postgres:
    image: postgres:17.0
    restart: "no"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    restart: "no"
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: e4Zslb6xT7qGs984hGQmZA
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      ALLOW_PLAINTEXT_LISTENER: yes
    healthcheck:
      test: kafka-topics.sh --bootstrap-server ${KAFKA_BOOTSTRAP_SERVERS} --list || exit 1
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5
    labels:
      amplicode.image: bitnami/kafka

  notification-service:
    image: meera7/kafka-card-notification:latest
    container_name: notification
    restart: "no"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    depends_on:
      kafka:
        condition: service_healthy
#    healthcheck:
#      test: curl -f http://localhost:8081/actuator/health || exit 1
#      interval: 30s
#      timeout: 5s
#      start_period: 30s
#      retries: 5
    labels:
      amplicode.image: springboot
volumes:
  postgres_data:
  kafka_data: